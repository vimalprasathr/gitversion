name: Version and Release

on:
  push:
    branches:
      - main

jobs:
  your_job_name:
    runs-on: ubuntu-latest
    steps:
      - name: Get current version
        id: version
        run: |
          cd /
          TAG_PREFIX="v"
          if [ -f version.txt ]; then
            CURRENT_VERSION=$(cat version.txt)
            echo "Current version: $CURRENT_VERSION"
          else
            echo "Version file not found. Exiting."
            exit 1
          fi

      - name: Increment version
        run: |
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          # Increment the minor version (you can adjust this based on your versioning strategy)
          MINOR=$((MINOR + 1))

          # Construct the new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          # Save the new version to the file
          echo "$NEW_VERSION" > version.txt

      - name: Set version and release
        run: |
          TAG_PREFIX="v"
          RELEASE_VERSION=$(cat version.txt)
          RELEASE_INFO="{\"version\": \"$TAG_PREFIX$RELEASE_VERSION\"}"
          echo "Release version: $TAG_PREFIX$RELEASE_VERSION"
          echo "Release info in JSON format: $RELEASE_INFO"
